#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     Este código fue generado por una herramienta.
//     Versión de runtime:4.0.30319.42000
//
//     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
//     se vuelve a generar el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DAL
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="Boutique")]
	public partial class DataClassesDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Definiciones de métodos de extensibilidad
    partial void OnCreated();
    partial void InsertCategoria(Categoria instance);
    partial void UpdateCategoria(Categoria instance);
    partial void DeleteCategoria(Categoria instance);
    partial void InsertCompra(Compra instance);
    partial void UpdateCompra(Compra instance);
    partial void DeleteCompra(Compra instance);
    partial void InsertPrenda(Prenda instance);
    partial void UpdatePrenda(Prenda instance);
    partial void DeletePrenda(Prenda instance);
    partial void InsertTemporada(Temporada instance);
    partial void UpdateTemporada(Temporada instance);
    partial void DeleteTemporada(Temporada instance);
    partial void InsertUsuario(Usuario instance);
    partial void UpdateUsuario(Usuario instance);
    partial void DeleteUsuario(Usuario instance);
    #endregion
		
		public DataClassesDataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["BoutiqueConnectionString"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public DataClassesDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClassesDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClassesDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClassesDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Categoria> Categoria
		{
			get
			{
				return this.GetTable<Categoria>();
			}
		}
		
		public System.Data.Linq.Table<Compra> Compra
		{
			get
			{
				return this.GetTable<Compra>();
			}
		}
		
		public System.Data.Linq.Table<Prenda> Prenda
		{
			get
			{
				return this.GetTable<Prenda>();
			}
		}
		
		public System.Data.Linq.Table<Temporada> Temporada
		{
			get
			{
				return this.GetTable<Temporada>();
			}
		}
		
		public System.Data.Linq.Table<Usuario> Usuario
		{
			get
			{
				return this.GetTable<Usuario>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Categoria")]
	public partial class Categoria : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _IDCateg;
		
		private System.DateTime _FechaCreacion;
		
		private string _Categoria1;
		
		private EntitySet<Prenda> _Prenda;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDCategChanging(long value);
    partial void OnIDCategChanged();
    partial void OnFechaCreacionChanging(System.DateTime value);
    partial void OnFechaCreacionChanged();
    partial void OnCategoria1Changing(string value);
    partial void OnCategoria1Changed();
    #endregion
		
		public Categoria()
		{
			this._Prenda = new EntitySet<Prenda>(new Action<Prenda>(this.attach_Prenda), new Action<Prenda>(this.detach_Prenda));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDCateg", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long IDCateg
		{
			get
			{
				return this._IDCateg;
			}
			set
			{
				if ((this._IDCateg != value))
				{
					this.OnIDCategChanging(value);
					this.SendPropertyChanging();
					this._IDCateg = value;
					this.SendPropertyChanged("IDCateg");
					this.OnIDCategChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FechaCreacion", DbType="DateTime NOT NULL")]
		public System.DateTime FechaCreacion
		{
			get
			{
				return this._FechaCreacion;
			}
			set
			{
				if ((this._FechaCreacion != value))
				{
					this.OnFechaCreacionChanging(value);
					this.SendPropertyChanging();
					this._FechaCreacion = value;
					this.SendPropertyChanged("FechaCreacion");
					this.OnFechaCreacionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="Categoria", Storage="_Categoria1", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string Categoria1
		{
			get
			{
				return this._Categoria1;
			}
			set
			{
				if ((this._Categoria1 != value))
				{
					this.OnCategoria1Changing(value);
					this.SendPropertyChanging();
					this._Categoria1 = value;
					this.SendPropertyChanged("Categoria1");
					this.OnCategoria1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Categoria_Prenda", Storage="_Prenda", ThisKey="IDCateg", OtherKey="IDCateg")]
		public EntitySet<Prenda> Prenda
		{
			get
			{
				return this._Prenda;
			}
			set
			{
				this._Prenda.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Prenda(Prenda entity)
		{
			this.SendPropertyChanging();
			entity.Categoria = this;
		}
		
		private void detach_Prenda(Prenda entity)
		{
			this.SendPropertyChanging();
			entity.Categoria = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Compra")]
	public partial class Compra : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _IDCompra;
		
		private string _IDUsuario;
		
		private System.Nullable<long> _IDPrenda;
		
		private decimal _Precio;
		
		private int _Cantidad;
		
		private EntityRef<Prenda> _Prenda;
		
		private EntityRef<Usuario> _Usuario;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDCompraChanging(long value);
    partial void OnIDCompraChanged();
    partial void OnIDUsuarioChanging(string value);
    partial void OnIDUsuarioChanged();
    partial void OnIDPrendaChanging(System.Nullable<long> value);
    partial void OnIDPrendaChanged();
    partial void OnPrecioChanging(decimal value);
    partial void OnPrecioChanged();
    partial void OnCantidadChanging(int value);
    partial void OnCantidadChanged();
    #endregion
		
		public Compra()
		{
			this._Prenda = default(EntityRef<Prenda>);
			this._Usuario = default(EntityRef<Usuario>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDCompra", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long IDCompra
		{
			get
			{
				return this._IDCompra;
			}
			set
			{
				if ((this._IDCompra != value))
				{
					this.OnIDCompraChanging(value);
					this.SendPropertyChanging();
					this._IDCompra = value;
					this.SendPropertyChanged("IDCompra");
					this.OnIDCompraChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDUsuario", DbType="NVarChar(50)")]
		public string IDUsuario
		{
			get
			{
				return this._IDUsuario;
			}
			set
			{
				if ((this._IDUsuario != value))
				{
					if (this._Usuario.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDUsuarioChanging(value);
					this.SendPropertyChanging();
					this._IDUsuario = value;
					this.SendPropertyChanged("IDUsuario");
					this.OnIDUsuarioChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDPrenda", DbType="BigInt")]
		public System.Nullable<long> IDPrenda
		{
			get
			{
				return this._IDPrenda;
			}
			set
			{
				if ((this._IDPrenda != value))
				{
					if (this._Prenda.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDPrendaChanging(value);
					this.SendPropertyChanging();
					this._IDPrenda = value;
					this.SendPropertyChanged("IDPrenda");
					this.OnIDPrendaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Precio", DbType="Money NOT NULL")]
		public decimal Precio
		{
			get
			{
				return this._Precio;
			}
			set
			{
				if ((this._Precio != value))
				{
					this.OnPrecioChanging(value);
					this.SendPropertyChanging();
					this._Precio = value;
					this.SendPropertyChanged("Precio");
					this.OnPrecioChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cantidad", DbType="Int NOT NULL")]
		public int Cantidad
		{
			get
			{
				return this._Cantidad;
			}
			set
			{
				if ((this._Cantidad != value))
				{
					this.OnCantidadChanging(value);
					this.SendPropertyChanging();
					this._Cantidad = value;
					this.SendPropertyChanged("Cantidad");
					this.OnCantidadChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Prenda_Compra", Storage="_Prenda", ThisKey="IDPrenda", OtherKey="IDPrenda", IsForeignKey=true)]
		public Prenda Prenda
		{
			get
			{
				return this._Prenda.Entity;
			}
			set
			{
				Prenda previousValue = this._Prenda.Entity;
				if (((previousValue != value) 
							|| (this._Prenda.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Prenda.Entity = null;
						previousValue.Compra.Remove(this);
					}
					this._Prenda.Entity = value;
					if ((value != null))
					{
						value.Compra.Add(this);
						this._IDPrenda = value.IDPrenda;
					}
					else
					{
						this._IDPrenda = default(Nullable<long>);
					}
					this.SendPropertyChanged("Prenda");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Usuario_Compra", Storage="_Usuario", ThisKey="IDUsuario", OtherKey="IDUsuario", IsForeignKey=true)]
		public Usuario Usuario
		{
			get
			{
				return this._Usuario.Entity;
			}
			set
			{
				Usuario previousValue = this._Usuario.Entity;
				if (((previousValue != value) 
							|| (this._Usuario.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Usuario.Entity = null;
						previousValue.Compra.Remove(this);
					}
					this._Usuario.Entity = value;
					if ((value != null))
					{
						value.Compra.Add(this);
						this._IDUsuario = value.IDUsuario;
					}
					else
					{
						this._IDUsuario = default(string);
					}
					this.SendPropertyChanged("Usuario");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Prenda")]
	public partial class Prenda : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _IDPrenda;
		
		private System.DateTime _FechaCreacion;
		
		private string _Color;
		
		private string _Tipo;
		
		private decimal _Precio;
		
		private string _Talla;
		
		private long _IDCateg;
		
		private System.Nullable<long> _IDTemp;
		
		private EntitySet<Compra> _Compra;
		
		private EntityRef<Categoria> _Categoria;
		
		private EntityRef<Temporada> _Temporada;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDPrendaChanging(long value);
    partial void OnIDPrendaChanged();
    partial void OnFechaCreacionChanging(System.DateTime value);
    partial void OnFechaCreacionChanged();
    partial void OnColorChanging(string value);
    partial void OnColorChanged();
    partial void OnTipoChanging(string value);
    partial void OnTipoChanged();
    partial void OnPrecioChanging(decimal value);
    partial void OnPrecioChanged();
    partial void OnTallaChanging(string value);
    partial void OnTallaChanged();
    partial void OnIDCategChanging(long value);
    partial void OnIDCategChanged();
    partial void OnIDTempChanging(System.Nullable<long> value);
    partial void OnIDTempChanged();
    #endregion
		
		public Prenda()
		{
			this._Compra = new EntitySet<Compra>(new Action<Compra>(this.attach_Compra), new Action<Compra>(this.detach_Compra));
			this._Categoria = default(EntityRef<Categoria>);
			this._Temporada = default(EntityRef<Temporada>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDPrenda", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long IDPrenda
		{
			get
			{
				return this._IDPrenda;
			}
			set
			{
				if ((this._IDPrenda != value))
				{
					this.OnIDPrendaChanging(value);
					this.SendPropertyChanging();
					this._IDPrenda = value;
					this.SendPropertyChanged("IDPrenda");
					this.OnIDPrendaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FechaCreacion", DbType="DateTime NOT NULL")]
		public System.DateTime FechaCreacion
		{
			get
			{
				return this._FechaCreacion;
			}
			set
			{
				if ((this._FechaCreacion != value))
				{
					this.OnFechaCreacionChanging(value);
					this.SendPropertyChanging();
					this._FechaCreacion = value;
					this.SendPropertyChanged("FechaCreacion");
					this.OnFechaCreacionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Color", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string Color
		{
			get
			{
				return this._Color;
			}
			set
			{
				if ((this._Color != value))
				{
					this.OnColorChanging(value);
					this.SendPropertyChanging();
					this._Color = value;
					this.SendPropertyChanged("Color");
					this.OnColorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Tipo", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string Tipo
		{
			get
			{
				return this._Tipo;
			}
			set
			{
				if ((this._Tipo != value))
				{
					this.OnTipoChanging(value);
					this.SendPropertyChanging();
					this._Tipo = value;
					this.SendPropertyChanged("Tipo");
					this.OnTipoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Precio", DbType="Money NOT NULL")]
		public decimal Precio
		{
			get
			{
				return this._Precio;
			}
			set
			{
				if ((this._Precio != value))
				{
					this.OnPrecioChanging(value);
					this.SendPropertyChanging();
					this._Precio = value;
					this.SendPropertyChanged("Precio");
					this.OnPrecioChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Talla", DbType="NVarChar(500) NOT NULL", CanBeNull=false)]
		public string Talla
		{
			get
			{
				return this._Talla;
			}
			set
			{
				if ((this._Talla != value))
				{
					this.OnTallaChanging(value);
					this.SendPropertyChanging();
					this._Talla = value;
					this.SendPropertyChanged("Talla");
					this.OnTallaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDCateg", DbType="BigInt NOT NULL")]
		public long IDCateg
		{
			get
			{
				return this._IDCateg;
			}
			set
			{
				if ((this._IDCateg != value))
				{
					if (this._Categoria.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDCategChanging(value);
					this.SendPropertyChanging();
					this._IDCateg = value;
					this.SendPropertyChanged("IDCateg");
					this.OnIDCategChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDTemp", DbType="BigInt")]
		public System.Nullable<long> IDTemp
		{
			get
			{
				return this._IDTemp;
			}
			set
			{
				if ((this._IDTemp != value))
				{
					if (this._Temporada.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDTempChanging(value);
					this.SendPropertyChanging();
					this._IDTemp = value;
					this.SendPropertyChanged("IDTemp");
					this.OnIDTempChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Prenda_Compra", Storage="_Compra", ThisKey="IDPrenda", OtherKey="IDPrenda")]
		public EntitySet<Compra> Compra
		{
			get
			{
				return this._Compra;
			}
			set
			{
				this._Compra.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Categoria_Prenda", Storage="_Categoria", ThisKey="IDCateg", OtherKey="IDCateg", IsForeignKey=true)]
		public Categoria Categoria
		{
			get
			{
				return this._Categoria.Entity;
			}
			set
			{
				Categoria previousValue = this._Categoria.Entity;
				if (((previousValue != value) 
							|| (this._Categoria.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Categoria.Entity = null;
						previousValue.Prenda.Remove(this);
					}
					this._Categoria.Entity = value;
					if ((value != null))
					{
						value.Prenda.Add(this);
						this._IDCateg = value.IDCateg;
					}
					else
					{
						this._IDCateg = default(long);
					}
					this.SendPropertyChanged("Categoria");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Temporada_Prenda", Storage="_Temporada", ThisKey="IDTemp", OtherKey="IDTemp", IsForeignKey=true)]
		public Temporada Temporada
		{
			get
			{
				return this._Temporada.Entity;
			}
			set
			{
				Temporada previousValue = this._Temporada.Entity;
				if (((previousValue != value) 
							|| (this._Temporada.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Temporada.Entity = null;
						previousValue.Prenda.Remove(this);
					}
					this._Temporada.Entity = value;
					if ((value != null))
					{
						value.Prenda.Add(this);
						this._IDTemp = value.IDTemp;
					}
					else
					{
						this._IDTemp = default(Nullable<long>);
					}
					this.SendPropertyChanged("Temporada");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Compra(Compra entity)
		{
			this.SendPropertyChanging();
			entity.Prenda = this;
		}
		
		private void detach_Compra(Compra entity)
		{
			this.SendPropertyChanging();
			entity.Prenda = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Temporada")]
	public partial class Temporada : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _IDTemp;
		
		private System.DateTime _FechaCreacion;
		
		private string _Temporada1;
		
		private EntitySet<Prenda> _Prenda;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDTempChanging(long value);
    partial void OnIDTempChanged();
    partial void OnFechaCreacionChanging(System.DateTime value);
    partial void OnFechaCreacionChanged();
    partial void OnTemporada1Changing(string value);
    partial void OnTemporada1Changed();
    #endregion
		
		public Temporada()
		{
			this._Prenda = new EntitySet<Prenda>(new Action<Prenda>(this.attach_Prenda), new Action<Prenda>(this.detach_Prenda));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDTemp", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long IDTemp
		{
			get
			{
				return this._IDTemp;
			}
			set
			{
				if ((this._IDTemp != value))
				{
					this.OnIDTempChanging(value);
					this.SendPropertyChanging();
					this._IDTemp = value;
					this.SendPropertyChanged("IDTemp");
					this.OnIDTempChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FechaCreacion", DbType="DateTime NOT NULL")]
		public System.DateTime FechaCreacion
		{
			get
			{
				return this._FechaCreacion;
			}
			set
			{
				if ((this._FechaCreacion != value))
				{
					this.OnFechaCreacionChanging(value);
					this.SendPropertyChanging();
					this._FechaCreacion = value;
					this.SendPropertyChanged("FechaCreacion");
					this.OnFechaCreacionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="Temporada", Storage="_Temporada1", DbType="NVarChar(1) NOT NULL", CanBeNull=false)]
		public string Temporada1
		{
			get
			{
				return this._Temporada1;
			}
			set
			{
				if ((this._Temporada1 != value))
				{
					this.OnTemporada1Changing(value);
					this.SendPropertyChanging();
					this._Temporada1 = value;
					this.SendPropertyChanged("Temporada1");
					this.OnTemporada1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Temporada_Prenda", Storage="_Prenda", ThisKey="IDTemp", OtherKey="IDTemp")]
		public EntitySet<Prenda> Prenda
		{
			get
			{
				return this._Prenda;
			}
			set
			{
				this._Prenda.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Prenda(Prenda entity)
		{
			this.SendPropertyChanging();
			entity.Temporada = this;
		}
		
		private void detach_Prenda(Prenda entity)
		{
			this.SendPropertyChanging();
			entity.Temporada = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Usuario")]
	public partial class Usuario : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _IDUsuario;
		
		private string _Password;
		
		private string _Nombre;
		
		private string _Email;
		
		private string _Tipo;
		
		private bool _Administrador;
		
		private EntitySet<Compra> _Compra;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDUsuarioChanging(string value);
    partial void OnIDUsuarioChanged();
    partial void OnPasswordChanging(string value);
    partial void OnPasswordChanged();
    partial void OnNombreChanging(string value);
    partial void OnNombreChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnTipoChanging(string value);
    partial void OnTipoChanged();
    partial void OnAdministradorChanging(bool value);
    partial void OnAdministradorChanged();
    #endregion
		
		public Usuario()
		{
			this._Compra = new EntitySet<Compra>(new Action<Compra>(this.attach_Compra), new Action<Compra>(this.detach_Compra));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDUsuario", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string IDUsuario
		{
			get
			{
				return this._IDUsuario;
			}
			set
			{
				if ((this._IDUsuario != value))
				{
					this.OnIDUsuarioChanging(value);
					this.SendPropertyChanging();
					this._IDUsuario = value;
					this.SendPropertyChanged("IDUsuario");
					this.OnIDUsuarioChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Password", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string Password
		{
			get
			{
				return this._Password;
			}
			set
			{
				if ((this._Password != value))
				{
					this.OnPasswordChanging(value);
					this.SendPropertyChanging();
					this._Password = value;
					this.SendPropertyChanged("Password");
					this.OnPasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nombre", DbType="NVarChar(50)")]
		public string Nombre
		{
			get
			{
				return this._Nombre;
			}
			set
			{
				if ((this._Nombre != value))
				{
					this.OnNombreChanging(value);
					this.SendPropertyChanging();
					this._Nombre = value;
					this.SendPropertyChanged("Nombre");
					this.OnNombreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="NVarChar(500)")]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Tipo", DbType="NVarChar(100)")]
		public string Tipo
		{
			get
			{
				return this._Tipo;
			}
			set
			{
				if ((this._Tipo != value))
				{
					this.OnTipoChanging(value);
					this.SendPropertyChanging();
					this._Tipo = value;
					this.SendPropertyChanged("Tipo");
					this.OnTipoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Administrador", DbType="Bit NOT NULL")]
		public bool Administrador
		{
			get
			{
				return this._Administrador;
			}
			set
			{
				if ((this._Administrador != value))
				{
					this.OnAdministradorChanging(value);
					this.SendPropertyChanging();
					this._Administrador = value;
					this.SendPropertyChanged("Administrador");
					this.OnAdministradorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Usuario_Compra", Storage="_Compra", ThisKey="IDUsuario", OtherKey="IDUsuario")]
		public EntitySet<Compra> Compra
		{
			get
			{
				return this._Compra;
			}
			set
			{
				this._Compra.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Compra(Compra entity)
		{
			this.SendPropertyChanging();
			entity.Usuario = this;
		}
		
		private void detach_Compra(Compra entity)
		{
			this.SendPropertyChanging();
			entity.Usuario = null;
		}
	}
}
#pragma warning restore 1591
